#------------------------------------------------------------------------
#  Python
#------------------------------------------------------------------------

1) inicia aplicacao local
python app.py

#------------------------------------------------------------------------
#  Docker
#------------------------------------------------------------------------

1) criar a imagem docker (nome da imagem: gabrielmotroni/datenworks-gabriel)
-> docker image build -t gabrielmotroni/datenworks-gabriel .
#ou
-> (docker build -t gabrielmotroni/datenworks-gabriel:latest) . # outra opcao

2)lista de imagens
-> docker image ls

3)rodar imagem no container
#Especificando a porta em seu comando docker run
-> docker run -p 5000:5000 -d gabrielmotroni/datenworks-gabriel #running a container
#ou
-> docker container run -ti gabrielmotroni/datenworks-gabriel #running a container terminar iterativo

4) mandar imagem para o DockerHub para ser acessivel ao K8s
-> docker login
-> docker push gabrielmotroni/datenworks-gabriel

#------------------------------------------------------------------------
#  K8s
#------------------------------------------------------------------------

1) iniciando, Uma máquina virtual será iniciada e o cluster Kubernetes estará disponível
-> minikube start

2)Como é possível termos acessos a diversos clusters, é necessário configurar o comando kubectl 
para que ele interaja especificamente com o cluster instalado pelo Minikube.
->kubectl config use-context minikube

3)ver algumas informações sobre o cluster. 
->kubectl cluster-info 

4)O comando kubectl get nodes mostrará todos os nodes disponíveis.
->kubectl get nodes

5)aplique as configuração no Kubernetes:
-> kubectl create -f k8s/redis-master.yaml

6) execute o comando para saber se tudo funcinou corretamente
->kubectl get pods 
-> kubectl apply -f k8s/redis-master.yaml

7)Pra ver os logs da aplicação: 
->kubectl logs --follow gabrielmotroni-datenworks-gabriel-minikube #nome do container

